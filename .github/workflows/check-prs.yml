name: Check Pull Requests

on:
  schedule:
    - cron: '0 0 * * *' # Run every day at midnight UTC
  workflow_dispatch: # Allows manual triggering

concurrency:
  group: check-prs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-prs:
    name: Close Inactive PRs and Notify Issues
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check for inactive PRs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Fetch all open pull requests
            const prs = await github.paginate(github.pulls.list, {
              owner,
              repo,
              state: "open",
              per_page: 100,
            });
            for (const pr of prs) {
              try {
                // Calculate inactivity duration...
                if (daysSinceUpdate > 7) {
                  // close PR, unassign, comment...
                }
              } catch (error) {
                console.log(`Error processing PR #${pr.number}: ${error}`);
                continue;
              }
            }
            if (daysSinceUpdate > 7) {
              console.log(`PR #${pr.number} has been inactive for more than 7 days.`);
              // Close the PR
              await github.pulls.update({
                owner,
                repo,
                pull_number: pr.number,
                state: "closed",
              });
            console.log(`Closed PR #${pr.number} due to inactivity.`);
            // Unassign and comment on the linked issue, if any
            const issueMatch = (pr.body || "").match(/(?:Fixes|Closes) #(\d+)/i);
            if (issueMatch) {
              const issueNumber = parseInt(issueMatch[1], 10);
              await github.issues.removeAssignees({
                owner,
                repo,
                issue_number: issueNumber,
                assignees: [pr.user.login],
              });
              console.log(`Unassigned user from issue #${issueNumber}.`);
              await github.issues.createComment({
                owner,
                repo,
                issue_number: issueNumber,
                body: `This issue is now available again as the related pull request #${pr.number} has been closed due to inactivity.`,
              });
              console.log(`Commented on issue #${issueNumber}.`);
            }
            }
